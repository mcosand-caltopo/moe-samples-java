// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		4136B33D6A1ACCD6F56E0C70 /* moe-main-interfaces.m in Sources */ = {isa = PBXBuildFile; fileRef = B8E4FA5A44EE87515228CF84 /* moe-main-interfaces.m */; };
		585CD7D81E27CC480087EAFF /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 585CD7D71E27CC480087EAFF /* main.cpp */; };
		585CD7DE1E27CC820087EAFF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 585CD7E01E27CC820087EAFF /* LaunchScreen.storyboard */; };
		585CD7E21E27CC8B0087EAFF /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 585CD7E11E27CC8B0087EAFF /* Assets.xcassets */; };
		585CD7E51E27CCCC0087EAFF /* MainUI.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 585CD7E71E27CCCC0087EAFF /* MainUI.storyboard */; };
		5B543782DC9F406C8BD29E29 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CAD127218CD81C71DC91EC69 /* main.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		F2467698A7BB534224E130C7 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		3683C3AF1A36AC88F80F87CC /* TicTacToe.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = TicTacToe.app; sourceTree = BUILT_PRODUCTS_DIR; };
		585CD7D71E27CC480087EAFF /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		585CD7DF1E27CC820087EAFF /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
		585CD7E11E27CC8B0087EAFF /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		585CD7E61E27CCCC0087EAFF /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/MainUI.storyboard; sourceTree = "<group>"; };
		6D5FF4DE9591F8947F5B2993 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = TicTacToe/Info.plist; sourceTree = SOURCE_ROOT; };
		B8E4FA5A44EE87515228CF84 /* moe-main-interfaces.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = "moe-main-interfaces.m"; path = "../build/moe/main/ui-headers/moe-main-interfaces.m"; sourceTree = "<group>"; };
		BCECB1731F02149A1E02B2B2 /* TicTacToe-Test.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "TicTacToe-Test.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		C8C7CDE8A4C5A612104B405E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = "TicTacToe-Test/Info.plist"; sourceTree = SOURCE_ROOT; };
		CAD127218CD81C71DC91EC69 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		9B1929BFB5561368B8705478 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E514A3457DC3D225B386E5D0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		148FB86BD4BACACB284FDAD6 /* TicTacToe */ = {
			isa = PBXGroup;
			children = (
				585CD7E11E27CC8B0087EAFF /* Assets.xcassets */,
				6D5FF4DE9591F8947F5B2993 /* Info.plist */,
				585CD7E01E27CC820087EAFF /* LaunchScreen.storyboard */,
				585CD7E71E27CCCC0087EAFF /* MainUI.storyboard */,
				6B15C67403F3D0F2063FD9CF /* Supporting Files */,
			);
			path = TicTacToe;
			sourceTree = "<group>";
		};
		25B349D5C3B5BC4B7628516A /* TicTacToe-Test */ = {
			isa = PBXGroup;
			children = (
				C8C7CDE8A4C5A612104B405E /* Info.plist */,
				B2343F36FC0B09AC4D8504E4 /* Supporting Files */,
			);
			path = "TicTacToe-Test";
			sourceTree = "<group>";
		};
		30B9F053F2C3CD93CA846B63 = {
			isa = PBXGroup;
			children = (
				148FB86BD4BACACB284FDAD6 /* TicTacToe */,
				25B349D5C3B5BC4B7628516A /* TicTacToe-Test */,
				DD5D37F20E09B45D05C495CC /* Frameworks */,
				867489B8B0630D4C9D5E91AA /* Products */,
				DEA3D4BA97CCEB495AAD70A7 /* Multi-OS Engine */,
			);
			sourceTree = "<group>";
		};
		6B15C67403F3D0F2063FD9CF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				CAD127218CD81C71DC91EC69 /* main.cpp */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		867489B8B0630D4C9D5E91AA /* Products */ = {
			isa = PBXGroup;
			children = (
				3683C3AF1A36AC88F80F87CC /* TicTacToe.app */,
				BCECB1731F02149A1E02B2B2 /* TicTacToe-Test.app */,
			);
			path = Products;
			sourceTree = "<group>";
		};
		B2343F36FC0B09AC4D8504E4 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				585CD7D71E27CC480087EAFF /* main.cpp */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		DD5D37F20E09B45D05C495CC /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			path = Frameworks;
			sourceTree = "<group>";
		};
		DEA3D4BA97CCEB495AAD70A7 /* Multi-OS Engine */ = {
			isa = PBXGroup;
			children = (
				B8E4FA5A44EE87515228CF84 /* moe-main-interfaces.m */,
			);
			name = "Multi-OS Engine";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		21A563AFF656126C1D15A7DB /* TicTacToe-Test */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BF6C93D4FC1BAE94ACBFF0DD /* Build configuration list for PBXNativeTarget "TicTacToe-Test" */;
			buildPhases = (
				EBB2616FEF25C1FA144B69F8 /* Compile Sources (MOE) */,
				9B1929BFB5561368B8705478 /* Frameworks */,
				43E8ADFBF69AB6F30114DD22 /* Resources */,
				4FAB8F5E977C9C4E6FBA4925 /* Sources */,
				F2467698A7BB534224E130C7 /* Embed Frameworks */,
			);
			buildRules = (
			);
			name = "TicTacToe-Test";
			productName = "TicTacToe-Test";
			productReference = BCECB1731F02149A1E02B2B2 /* TicTacToe-Test.app */;
			productType = "com.apple.product-type.application";
		};
		567CC5C2AAB82CB991F52EAC /* TicTacToe */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C97788E3C14872FD6A6FBDF0 /* Build configuration list for PBXNativeTarget "TicTacToe" */;
			buildPhases = (
				D47A8CDF879F8ADF5C4B277E /* Compile Sources (MOE) */,
				E514A3457DC3D225B386E5D0 /* Frameworks */,
				FCAC10BD6C69F5DABAE03C9A /* Resources */,
				D62390D8E9FA7DD34823C126 /* Sources */,
			);
			buildRules = (
			);
			name = TicTacToe;
			productName = TicTacToe;
			productReference = 3683C3AF1A36AC88F80F87CC /* TicTacToe.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		A0D8BCBCE0E5D3BDB6C4FBDA /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0820;
				ORGANIZATIONNAME = "My Company";
			};
			buildConfigurationList = 67443C25A095C637AAC99E4C /* Build configuration list for PBXProject "TicTacToe" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 30B9F053F2C3CD93CA846B63;
			productRefGroup = 867489B8B0630D4C9D5E91AA /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				567CC5C2AAB82CB991F52EAC /* TicTacToe */,
				21A563AFF656126C1D15A7DB /* TicTacToe-Test */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		43E8ADFBF69AB6F30114DD22 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FCAC10BD6C69F5DABAE03C9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				585CD7E51E27CCCC0087EAFF /* MainUI.storyboard in Resources */,
				585CD7E21E27CC8B0087EAFF /* Assets.xcassets in Resources */,
				585CD7DE1E27CC820087EAFF /* LaunchScreen.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		D47A8CDF879F8ADF5C4B277E /* Compile Sources (MOE) */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Compile Sources (MOE)";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "set -e\n\nexport MOE_BUILD_SOURCE_SET=\"main\"\nexport MOE_BUILD_MODE=\"$(echo $CONFIGURATION | tr '[:upper:]' '[:lower:]')\"\n\n# Check project directory\nif [ ! -d \"$MOE_PROJECT_DIR\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_DIR' doesn't point to a directory!\"; exit 1;\nfi\ncd \"$MOE_PROJECT_DIR\"\n\n# Export JAVA_HOME\nif [ -z \"$JAVA_HOME\" ]; then\n    if [ -z \"$MOE_JAVA_VERSION_OVERRIDE\" ]; then\n        export JAVA_HOME=$(/usr/libexec/java_home)\n    else\n        export JAVA_HOME=$(/usr/libexec/java_home -v \"$MOE_JAVA_VERSION_OVERRIDE\")\n    fi\nfi\necho $JAVA_HOME\n\n# Utility function for finding the Gradle implementation\nfunction findGradle {\n    CD=\"$PWD\"\n    while [ \"$CD\" != \"\" ]; do\n        echo \"Looking for gradlew in $CD\"\n        if [ -x \"$CD/gradlew\" ]; then\n            GRADLE_EXEC=$CD/gradlew\n            return 0\n        fi\n        CD=\"${CD%/*}\"\n    done\n\n    echo \"Checking with 'which'\"\n    GRADLE_EXEC=$(which 'gradle')\n\n    if [ \"$GRADLE_EXEC\" = \"\" ]; then\n        echo \"Failed to locate 'gradle' executable!\"\n        exit 1\n    fi\n}\n\n# Build project with Gradle\nif [ -z \"$MOE_GRADLE_EXTERNAL_BUILD\" ]; then\n    findGradle\n    \"$GRADLE_EXEC\" --no-daemon moeXcodeInternal -s\nfi\n\n# Check output directory\nif [ ! -d \"${MOE_PROJECT_BUILD_DIR}\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_BUILD_DIR' doesn't point to a directory!\"; exit 1;\nfi\n\n# Copy some resources\nmkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/resources/${MOE_BUILD_MODE}/application.jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/startup-provider/${MOE_BUILD_MODE}/preregister.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nif [ \"${MOE_BUILD_SOURCE_SET}\" == \"test\" ]; then\n    cp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/test-provider/${MOE_BUILD_MODE}/classlist.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nfi\n\n# Copy android CA certificates on demand\nif [ \"${MOE_COPY_ANDROID_CACERTS}\" == \"YES\" ]; then\n    rm -rf \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    mkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    unzip \"${MOE_SDK_PATH}/sdk/moe-core-certificates.zip\" -d \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\nfi\n\n# Copy and sign MOE framework\nrsync -av --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \\\n    \"${MOE_FRAMEWORK_PATH}/MOE.framework\" \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/\"\nif [ \"${ARCHS}\" == \"arm64\" ] || [ \"${ARCHS}\" == \"x86_64\" ]; then\n    lipo -thin \"${ARCHS}\" -output \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/MOE.framework/MOE\" \"${MOE_FRAMEWORK_PATH}/MOE.framework/MOE\"\nfi\nif [ -n \"${EXPANDED_CODE_SIGN_IDENTITY}\" -a \"${CODE_SIGNING_REQUIRED}\" != \"NO\" -a \"${CODE_SIGNING_ALLOWED}\" != \"NO\" ]; then\n    /usr/bin/codesign --force --sign $EXPANDED_CODE_SIGN_IDENTITY $OTHER_CODE_SIGN_FLAGS \\\n        --preserve-metadata=identifier,entitlements \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/MOE.framework\"\nfi\n";
		};
		EBB2616FEF25C1FA144B69F8 /* Compile Sources (MOE) */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Compile Sources (MOE)";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "set -e\n\nexport MOE_BUILD_SOURCE_SET=\"test\"\nexport MOE_BUILD_MODE=\"$(echo $CONFIGURATION | tr '[:upper:]' '[:lower:]')\"\n\n# Check project directory\nif [ ! -d \"$MOE_PROJECT_DIR\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_DIR' doesn't point to a directory!\"; exit 1;\nfi\ncd \"$MOE_PROJECT_DIR\"\n\n# Export JAVA_HOME\nif [ -z \"$JAVA_HOME\" ]; then\n    if [ -z \"$MOE_JAVA_VERSION_OVERRIDE\" ]; then\n        export JAVA_HOME=$(/usr/libexec/java_home)\n    else\n        export JAVA_HOME=$(/usr/libexec/java_home -v \"$MOE_JAVA_VERSION_OVERRIDE\")\n    fi\nfi\necho $JAVA_HOME\n\n# Utility function for finding the Gradle implementation\nfunction findGradle {\n    CD=\"$PWD\"\n    while [ \"$CD\" != \"\" ]; do\n        echo \"Looking for gradlew in $CD\"\n        if [ -x \"$CD/gradlew\" ]; then\n            GRADLE_EXEC=$CD/gradlew\n            return 0\n        fi\n        CD=\"${CD%/*}\"\n    done\n\n    echo \"Checking with 'which'\"\n    GRADLE_EXEC=$(which 'gradle')\n\n    if [ \"$GRADLE_EXEC\" = \"\" ]; then\n        echo \"Failed to locate 'gradle' executable!\"\n        exit 1\n    fi\n}\n\n# Build project with Gradle\nif [ -z \"$MOE_GRADLE_EXTERNAL_BUILD\" ]; then\n    findGradle\n    \"$GRADLE_EXEC\" --no-daemon moeXcodeInternal -s\nfi\n\n# Check output directory\nif [ ! -d \"${MOE_PROJECT_BUILD_DIR}\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_BUILD_DIR' doesn't point to a directory!\"; exit 1;\nfi\n\n# Copy some resources\nmkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/resources/${MOE_BUILD_MODE}/application.jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/startup-provider/${MOE_BUILD_MODE}/preregister.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nif [ \"${MOE_BUILD_SOURCE_SET}\" == \"test\" ]; then\n    cp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/test-provider/${MOE_BUILD_MODE}/classlist.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nfi\n\n# Copy android CA certificates on demand\nif [ \"${MOE_COPY_ANDROID_CACERTS}\" == \"YES\" ]; then\n    rm -rf \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    mkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    unzip \"${MOE_SDK_PATH}/sdk/moe-core-certificates.zip\" -d \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\nfi\n\n# Copy and sign MOE framework\nrsync -av --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \\\n    \"${MOE_FRAMEWORK_PATH}/MOE.framework\" \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/\"\nif [ \"${ARCHS}\" == \"arm64\" ] || [ \"${ARCHS}\" == \"x86_64\" ]; then\n    lipo -thin \"${ARCHS}\" -output \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/MOE.framework/MOE\" \"${MOE_FRAMEWORK_PATH}/MOE.framework/MOE\"\nfi\nif [ -n \"${EXPANDED_CODE_SIGN_IDENTITY}\" -a \"${CODE_SIGNING_REQUIRED}\" != \"NO\" -a \"${CODE_SIGNING_ALLOWED}\" != \"NO\" ]; then\n    /usr/bin/codesign --force --sign $EXPANDED_CODE_SIGN_IDENTITY $OTHER_CODE_SIGN_FLAGS \\\n        --preserve-metadata=identifier,entitlements \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/MOE.framework\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		4FAB8F5E977C9C4E6FBA4925 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				585CD7D81E27CC480087EAFF /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D62390D8E9FA7DD34823C126 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5B543782DC9F406C8BD29E29 /* main.cpp in Sources */,
				4136B33D6A1ACCD6F56E0C70 /* moe-main-interfaces.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		585CD7E01E27CC820087EAFF /* LaunchScreen.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				585CD7DF1E27CC820087EAFF /* Base */,
			);
			name = LaunchScreen.storyboard;
			sourceTree = "<group>";
		};
		585CD7E71E27CCCC0087EAFF /* MainUI.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				585CD7E61E27CCCC0087EAFF /* Base */,
			);
			name = MainUI.storyboard;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		59524B25CE9C108F16CD1A4B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				DEAD_CODE_STRIPPING = NO;
				ENABLE_BITCODE = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = TicTacToe/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_JAVA_VERSION_OVERRIDE = "";
				MOE_OTHER_LDFLAGS = "${MOE_SECT_OAT} ${MOE_SECT_ART} ${MOE_SEGPROT} ${MOE_PAGEZERO} ${MOE_CUSTOM_OTHER_LDFLAGS} -lc++ -framework MOE";
				MOE_PAGEZERO = "";
				"MOE_PAGEZERO[arch=x86_64]" = "-pagezero_size 4096";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/../";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SECT_ART = "-sectcreate __ARTDATA __artdata \"${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.art\"";
				MOE_SECT_OAT = "-sectcreate __OATDATA __oatdata \"${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.oat\"";
				MOE_SEGPROT = "-segprot __OATDATA rx rx -segprot __ARTDATA rw rw";
				"MOE_SEGPROT[arch=x86_64]" = "-segprot __OATDATA rwx rx -segprot __ARTDATA rwx rw";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = (
					"${MOE_OTHER_LDFLAGS}",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.moe.samples.TicTacToe;
				PRODUCT_NAME = TicTacToe;
				STRIP_STYLE = "non-global";
			};
			name = Release;
		};
		8791ACDA2E4730484F26B3E3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				DEAD_CODE_STRIPPING = NO;
				ENABLE_BITCODE = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = "$(SRCROOT)/TicTacToe-Test/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_JAVA_VERSION_OVERRIDE = "";
				MOE_OTHER_LDFLAGS = "${MOE_SECT_OAT} ${MOE_SECT_ART} ${MOE_SEGPROT} ${MOE_PAGEZERO} ${MOE_CUSTOM_OTHER_LDFLAGS} -lc++ -framework MOE";
				MOE_PAGEZERO = "";
				"MOE_PAGEZERO[arch=x86_64]" = "-pagezero_size 4096";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/../";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SECT_ART = "-sectcreate __ARTDATA __artdata \"${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.art\"";
				MOE_SECT_OAT = "-sectcreate __OATDATA __oatdata \"${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.oat\"";
				MOE_SEGPROT = "-segprot __OATDATA rx rx -segprot __ARTDATA rw rw";
				"MOE_SEGPROT[arch=x86_64]" = "-segprot __OATDATA rwx rx -segprot __ARTDATA rwx rw";
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = (
					"${MOE_OTHER_LDFLAGS}",
					"$(inherited)",
				);
				PRODUCT_NAME = "TicTacToe-Test";
				STRIP_STYLE = "non-global";
			};
			name = Debug;
		};
		94BE8BB2DF8208BA9E630087 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				DEAD_CODE_STRIPPING = NO;
				ENABLE_BITCODE = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = "$(SRCROOT)/TicTacToe-Test/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_JAVA_VERSION_OVERRIDE = "";
				MOE_OTHER_LDFLAGS = "${MOE_SECT_OAT} ${MOE_SECT_ART} ${MOE_SEGPROT} ${MOE_PAGEZERO} ${MOE_CUSTOM_OTHER_LDFLAGS} -lc++ -framework MOE";
				MOE_PAGEZERO = "";
				"MOE_PAGEZERO[arch=x86_64]" = "-pagezero_size 4096";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/../";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SECT_ART = "-sectcreate __ARTDATA __artdata \"${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.art\"";
				MOE_SECT_OAT = "-sectcreate __OATDATA __oatdata \"${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.oat\"";
				MOE_SEGPROT = "-segprot __OATDATA rx rx -segprot __ARTDATA rw rw";
				"MOE_SEGPROT[arch=x86_64]" = "-segprot __OATDATA rwx rx -segprot __ARTDATA rwx rw";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = (
					"${MOE_OTHER_LDFLAGS}",
					"$(inherited)",
				);
				PRODUCT_NAME = "TicTacToe-Test";
				STRIP_STYLE = "non-global";
			};
			name = Release;
		};
		C762061A49B2C8C5629E783E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_VERSION = 1.8.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				SYMROOT = "$(SRCROOT)/../build/moe/xcodebuild/sym";
				TARGETED_DEVICE_FAMILY = "1,2";
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
			};
			name = Debug;
		};
		C98C94F46CD4A436B2AD7FF2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				DEAD_CODE_STRIPPING = NO;
				ENABLE_BITCODE = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = TicTacToe/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_JAVA_VERSION_OVERRIDE = "";
				MOE_OTHER_LDFLAGS = "${MOE_SECT_OAT} ${MOE_SECT_ART} ${MOE_SEGPROT} ${MOE_PAGEZERO} ${MOE_CUSTOM_OTHER_LDFLAGS} -lc++ -framework MOE";
				MOE_PAGEZERO = "";
				"MOE_PAGEZERO[arch=x86_64]" = "-pagezero_size 4096";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/../";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SECT_ART = "-sectcreate __ARTDATA __artdata \"${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.art\"";
				MOE_SECT_OAT = "-sectcreate __OATDATA __oatdata \"${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.oat\"";
				MOE_SEGPROT = "-segprot __OATDATA rx rx -segprot __ARTDATA rw rw";
				"MOE_SEGPROT[arch=x86_64]" = "-segprot __OATDATA rwx rx -segprot __ARTDATA rwx rw";
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = (
					"${MOE_OTHER_LDFLAGS}",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.moe.samples.TicTacToe;
				PRODUCT_NAME = TicTacToe;
				STRIP_STYLE = "non-global";
			};
			name = Debug;
		};
		F617AF013D52389CF0C71E56 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_VERSION = 1.8.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SYMROOT = "$(SRCROOT)/../build/moe/xcodebuild/sym";
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = i386;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		67443C25A095C637AAC99E4C /* Build configuration list for PBXProject "TicTacToe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C762061A49B2C8C5629E783E /* Debug */,
				F617AF013D52389CF0C71E56 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		BF6C93D4FC1BAE94ACBFF0DD /* Build configuration list for PBXNativeTarget "TicTacToe-Test" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8791ACDA2E4730484F26B3E3 /* Debug */,
				94BE8BB2DF8208BA9E630087 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		C97788E3C14872FD6A6FBDF0 /* Build configuration list for PBXNativeTarget "TicTacToe" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C98C94F46CD4A436B2AD7FF2 /* Debug */,
				59524B25CE9C108F16CD1A4B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = A0D8BCBCE0E5D3BDB6C4FBDA /* Project object */;
}
